#Here I will provide a brief walkthrough of the implementation of the 4th order Runge-Kutta iterative method of integration,
# as applied to a 1D 2nd order differential equation (in this case, the acceleration due to Stokes drag in the x-direction, in a fluid field of constant velocity).






import matplotlib.pyplot as plt
import numpy as np


Mass_Particle = 3.73*(10**-13) # Particle Mass in (kg)
Density_Particle = 5700 # Particle Density in (kg/m^3) (Set as Fe2O3)
Volume_Particle = Mass_Particle/Density_Particle # Volume of Particle in (m^3)
Diameter_Particle = (6*(Volume_Particle/np.pi)) ** (1/3)

Dynamic_Viscosity_Fluid = 2.527*(10**-6) # Dynamic Viscosity of Air in (Ns/m^2) (Set as Air at Atmos. Pressure and 293K)



t=0.0
posx=0.0
vx=0.5
Velocity_Fluid_X = 1.0
tf=1.0 #final value of t
dt=0.001 #step length

#acceleration x-axis -> drag

def f_acc_x(posx,vx,t):
    return -3*Dynamic_Viscosity_Fluid*(np.pi)*(Diameter_Particle/Mass_Particle)*(vx - (Velocity_Fluid_X))


#velocity x-axis -> drag

def f_vel_x(posx,vx,t):
    return vx 

tt=[0.0]
pos_x=[0.0]
vvx=[0.5]
vVelocity_Fluid_X=[1.0]

while t<=tf:
    tt.append(t)
    pos_x.append(posx)
    vvx.append(vx)
    vVelocity_Fluid_X.append(Velocity_Fluid_X)
